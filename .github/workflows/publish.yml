name: Publish
  
on:
  push:
    branches:
    - main
    paths:
      - '*/Project/Sources/**/*.4dm'
      - '*/Project/Sources/*/*.4DForm'
      - '*/Project/Sources/*.4DCatalog'
      - '*/Project/Resources/**'
  workflow_dispatch:
    inputs:
        mode:
          type: choice
          description: semantic versioning
          options: 
          - patch
          - minor 
          - major
          required: true

env: 
  project_path: 4d-class-compiler/Project/4d-class-compiler.4DProject
  
jobs:

  publish:
    permissions: write-all
    runs-on: [macos-latest]
    steps:

      - name: configure
        id: configure
        run: |
          if [ "${mode}" = "" ]; then
          echo "mode=patch" >> $GITHUB_OUTPUT
          else
          echo "mode=${mode}" >> $GITHUB_OUTPUT
          fi
          echo "project_path=${GITHUB_WORKSPACE}/${project_path}" >> $GITHUB_OUTPUT 
        shell: bash
        env:
          mode: ${{ inputs.mode }} 

      - name: checkout 
        uses: actions/checkout@v4

      - name: set version
        id: version
        uses: miyako/4D/.github/actions/package-set-version@v1
        with:
          mode: ${{ steps.configure.outputs.mode }}

      - name: zip
        id: zip
        run: |
          repository_name=$(basename "${repository}")
          zip_path=${repository_name}.zip
          echo "zip_path=${zip_path}" >> $GITHUB_OUTPUT
          echo "repository_name=${repository_name}" >> $GITHUB_OUTPUT
          rm -f  _config.yml
          rm -rf _includes
          rm -rf .[^.]* .??*
          rm -rf assets
          rm -rf Data
          rm -rf Libraries
          rm -rf Settings
          rm -rf Project/DerivedData
          rm -rf userPreferences.miyako
          ditto -c -k --sequesterRsrc --keepParent . "${zip_path}"
          echo "asset_path=${GITHUB_WORKSPACE}/${zip_path}" >> $GITHUB_OUTPUT  
          echo "asset_name=${zip_path}" >> $GITHUB_OUTPUT
        env:
          repository: ${{ github.repository }}

      - name: List contents of output
        run: ls -lh .
        
      - name: create release
        id: release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          
      - name: upload zip
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ${{ steps.zip.outputs.asset_path }}
          asset_name: ${{ steps.zip.outputs.asset_name }}
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
 
